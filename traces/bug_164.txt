#164
kv_engine/engines/ep/tests/ep_testsuite.cc:2269: error: Null Dereference
  pointer `null` is dereferenced by call to `get_str_stat()` at line 2269, column 27.

kv_engine/engines/ep/tests/ep_testsuite.cc:2267:1: start of procedure test_vb_file_stats()
2265. }
2266. 
2267. static enum test_result test_vb_file_stats(EngineIface* h) {
      ^
2268.     wait_for_flusher_to_settle(h);
2269.     std::string backend = get_str_stat(h, "ep_backend");

kv_engine/engines/ep/tests/ep_testsuite.cc:2268:5: Skipping wait_for_flusher_to_settle(): empty list of specs
2266. 
2267. static enum test_result test_vb_file_stats(EngineIface* h) {
2268.     wait_for_flusher_to_settle(h);
          ^
2269.     std::string backend = get_str_stat(h, "ep_backend");
2270.     // Some tests just insert vbstate into local db and magma doesn't track

kv_engine/engines/ep/tests/ep_testsuite.cc:2269:5: 
2267. static enum test_result test_vb_file_stats(EngineIface* h) {
2268.     wait_for_flusher_to_settle(h);
2269.     std::string backend = get_str_stat(h, "ep_backend");
          ^
2270.     // Some tests just insert vbstate into local db and magma doesn't track
2271.     // the data size until items are put into the key and seq indexes so

kv_engine/engines/ep/tests/ep_test_apis.cc:1538:1: start of procedure get_str_stat()
  1536. }
  1537. 
  1538. std::string get_str_stat(EngineIface* h,
        ^
  1539.                          const char* statname,
  1540.                          const char* statkey) {

kv_engine/engines/ep/tests/ep_test_apis.cc:1541:5: 
  1539.                          const char* statname,
  1540.                          const char* statkey) {
  1541.     return get_stat<std::string>(h, statname, statkey);
            ^
  1542. }
  1543. 

kv_engine/engines/ep/tests/ep_test_apis.cc:1480:1: start of procedure get_stat<std::string>()
    1478. }
    1479. 
    1480. template <>
          ^
    1481. std::string get_stat(EngineIface* h,
    1482.                      const char* statname,

kv_engine/engines/ep/tests/ep_test_apis.cc:1484:5: Skipping lock_guard: method has no implementation
    1482.                      const char* statname,
    1483.                      const char* statkey) {
    1484.     std::lock_guard<std::mutex> lh(get_stat_context.mutex);
              ^
    1485. 
    1486.     get_stat_context.requested_stat_name = statname;

kv_engine/engines/ep/tests/ep_test_apis.cc:1486:5: Skipping operator=: method has no implementation
    1484.     std::lock_guard<std::mutex> lh(get_stat_context.mutex);
    1485. 
    1486.     get_stat_context.requested_stat_name = statname;
              ^
    1487.     get_stat_context.actual_stat_value.clear();
    1488. 

kv_engine/engines/ep/tests/ep_test_apis.cc:1487:5: Skipping clear: method has no implementation
    1485. 
    1486.     get_stat_context.requested_stat_name = statname;
    1487.     get_stat_context.actual_stat_value.clear();
              ^
    1488. 
    1489.     auto* cookie = testHarness->create_cookie(h);

kv_engine/engines/ep/tests/ep_test_apis.cc:1489:5: Skipping create_cookie: method has no implementation
    1487.     get_stat_context.actual_stat_value.clear();
    1488. 
    1489.     auto* cookie = testHarness->create_cookie(h);
              ^
    1490.     cb::engine_errc err =
    1491.             h->get_stats(*cookie,

kv_engine/engines/ep/tests/ep_test_apis.cc:1490:5: 
    1488. 
    1489.     auto* cookie = testHarness->create_cookie(h);
    1490.     cb::engine_errc err =
              ^
    1491.             h->get_stats(*cookie,
    1492.                          {statkey, statkey == nullptr ? 0 : strlen(statkey)},

kv_engine/engines/ep/tests/ep_test_apis.cc:1492:36: Condition is false
    1490.     cb::engine_errc err =
    1491.             h->get_stats(*cookie,
    1492.                          {statkey, statkey == nullptr ? 0 : strlen(statkey)},
                                             ^
    1493.                          {},
    1494.                          add_individual_stat);

kv_engine/engines/ep/tests/ep_test_apis.cc:1494:26: Skipping function<a02cb4fd326a4a3c>: method has no implementation
    1492.                          {statkey, statkey == nullptr ? 0 : strlen(statkey)},
    1493.                          {},
    1494.                          add_individual_stat);
                                   ^
    1495.     testHarness->destroy_cookie(cookie);
    1496. 

kv_engine/engines/ep/tests/ep_test_apis.cc:1494:45: Skipping ~function: method has no implementation
    1492.                          {statkey, statkey == nullptr ? 0 : strlen(statkey)},
    1493.                          {},
    1494.                          add_individual_stat);
                                                      ^
    1495.     testHarness->destroy_cookie(cookie);
    1496. 

kv_engine/engines/ep/tests/ep_test_apis.cc:1490:5: 
    1488. 
    1489.     auto* cookie = testHarness->create_cookie(h);
    1490.     cb::engine_errc err =
              ^
    1491.             h->get_stats(*cookie,
    1492.                          {statkey, statkey == nullptr ? 0 : strlen(statkey)},

kv_engine/engines/ep/tests/ep_test_apis.cc:1495:5: Skipping destroy_cookie: method has no implementation
    1493.                          {},
    1494.                          add_individual_stat);
    1495.     testHarness->destroy_cookie(cookie);
              ^
    1496. 
    1497.     if (err != cb::engine_errc::success) {

kv_engine/engines/ep/tests/ep_test_apis.cc:1497:9: Taking false branch
    1495.     testHarness->destroy_cookie(cookie);
    1496. 
    1497.     if (err != cb::engine_errc::success) {
                  ^
    1498.         throw engine_error(err);
    1499.     }

kv_engine/engines/ep/tests/ep_test_apis.cc:1501:9: Taking false branch
    1499.     }
    1500. 
    1501.     if (get_stat_context.actual_stat_value.empty()) {
                  ^
    1502.         throw std::out_of_range(std::string("Failed to find requested statname '") +
    1503.                                 statname + "'");

kv_engine/engines/ep/tests/ep_test_apis.cc:1509:5: Skipping ~lock_guard: method has no implementation
    1507.     // around std::string copy-on-write data-race issues seen on some
    1508.     // versions of libstdc++ - see MB-18510 / MB-19688.
    1509.     return std::string(get_stat_context.actual_stat_value.begin(),
              ^
    1510.                        get_stat_context.actual_stat_value.end());
    1511. }

kv_engine/engines/ep/tests/ep_test_apis.cc:1511:1: return from a call to get_stat<std::string>
    1509.     return std::string(get_stat_context.actual_stat_value.begin(),
    1510.                        get_stat_context.actual_stat_value.end());
    1511. }
          ^
    1512. 
    1513. /// Backward-compatible functions (encode type name in function name).

kv_engine/engines/ep/tests/ep_test_apis.cc:1541:5: 
  1539.                          const char* statname,
  1540.                          const char* statkey) {
  1541.     return get_stat<std::string>(h, statname, statkey);
            ^
  1542. }
  1543. 

kv_engine/engines/ep/tests/ep_test_apis.cc:1542:1: return from a call to get_str_stat
  1540.                          const char* statkey) {
  1541.     return get_stat<std::string>(h, statname, statkey);
  1542. }
        ^
  1543. 
  1544. bool get_bool_stat(EngineIface* h,
