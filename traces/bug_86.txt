#86
kv_engine/engines/ep/src/dcp/consumer.cc:1623: warning: Lock Consistency Violation
  Read/Write race. Non-private method `DcpConsumer::enableSynchronousReplication` reads without synchronization from `this->opaqueCounter`. Potentially races with write in method `DcpConsumer::addStream`.

kv_engine/engines/ep/src/dcp/consumer.cc:1623:27: <Read trace>
1621. 
1622.     if (pendingSendConsumerName && isSyncReplicationEnabled()) {
1623.         uint32_t opaque = ++opaqueCounter;
                                ^
1624.         NonBucketAllocationGuard guard;
1625.         cb::engine_errc ret = producers.control(

kv_engine/engines/ep/src/dcp/consumer.cc:1623:27: access to `this->opaqueCounter`
1621. 
1622.     if (pendingSendConsumerName && isSyncReplicationEnabled()) {
1623.         uint32_t opaque = ++opaqueCounter;
                                ^
1624.         NonBucketAllocationGuard guard;
1625.         cb::engine_errc ret = producers.control(

kv_engine/engines/ep/src/dcp/consumer.cc:285:27: <Write trace>
283.     }
284. 
285.     uint32_t new_opaque = ++opaqueCounter;
                               ^
286.     failover_entry_t entry = vb->failovers->getLatestEntry();
287.     uint64_t start_seqno = info.start;

kv_engine/engines/ep/src/dcp/consumer.cc:285:27: access to `this->opaqueCounter`
283.     }
284. 
285.     uint32_t new_opaque = ++opaqueCounter;
                               ^
286.     failover_entry_t entry = vb->failovers->getLatestEntry();
287.     uint64_t start_seqno = info.start;
