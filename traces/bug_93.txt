#93
kv_engine/engines/ep/src/dcp/passive_stream.cc:1187: warning: Lock Consistency Violation
  Read/Write race. Non-private method `PassiveStream::clearBuffer_UNLOCKED` reads without synchronization from `this->buffer.bytes`. Potentially races with write in method `PassiveStream::messageReceived`.

kv_engine/engines/ep/src/dcp/passive_stream.cc:1187:5: <Read trace>
1185. 
1186. uint32_t PassiveStream::clearBuffer_UNLOCKED() {
1187.     uint32_t unackedBytes = buffer.bytes;
          ^
1188.     buffer.messages.clear();
1189.     buffer.bytes = 0;

kv_engine/engines/ep/src/dcp/passive_stream.cc:1187:5: access to `this->buffer.bytes`
1185. 
1186. uint32_t PassiveStream::clearBuffer_UNLOCKED() {
1187.     uint32_t unackedBytes = buffer.bytes;
          ^
1188.     buffer.messages.clear();
1189.     buffer.bytes = 0;

kv_engine/engines/ep/src/dcp/passive_stream.cc:411:9: <Write trace>
409.     // Only buffer if the stream is not dead
410.     if (isActive()) {
411.         buffer.push({std::move(dcpResponse), ufc.release()});
             ^
412.     }
413.     return cb::engine_errc::temporary_failure;

kv_engine/engines/ep/src/dcp/passive_stream.cc:411:9: call to PassiveStream::Buffer::push
409.     // Only buffer if the stream is not dead
410.     if (isActive()) {
411.         buffer.push({std::move(dcpResponse), ufc.release()});
             ^
412.     }
413.     return cb::engine_errc::temporary_failure;

kv_engine/engines/ep/src/dcp/passive_stream.cc:1301:5: access to `this->buffer.bytes`
  1299. void PassiveStream::Buffer::push(PassiveStream::Buffer::BufferType bufferItem) {
  1300.     std::lock_guard<std::mutex> lg(bufMutex);
  1301.     bytes += bufferItem.second;
            ^
  1302.     messages.emplace_back(std::move(bufferItem));
  1303. }
