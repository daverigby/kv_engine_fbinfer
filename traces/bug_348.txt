#348
phosphor/src/trace_log.cc:90: warning: Lock Consistency Violation
  Read/Write race. Non-private method `phosphor::TraceLog::stop` indirectly reads without synchronization from `this->trace_config.stop_tracing`. Potentially races with write in method `phosphor::TraceLog::start`.

phosphor/src/trace_log.cc:90:31: <Read trace>
88.             auto* cb = trace_config.getStoppedCallback();
89.             if ((cb != nullptr) &&
90.                 (!shutdown || trace_config.getStopTracingOnDestruct())) {
                                  ^
91.                 (*cb)(*this, lh);
92.             }

phosphor/src/trace_log.cc:90:31: call to phosphor::TraceConfig::getStopTracingOnDestruct
88.             auto* cb = trace_config.getStoppedCallback();
89.             if ((cb != nullptr) &&
90.                 (!shutdown || trace_config.getStopTracingOnDestruct())) {
                                  ^
91.                 (*cb)(*this, lh);
92.             }

phosphor/src/trace_config.cc:131:9: access to `this->trace_config.stop_tracing`
  129. 
  130.     bool TraceConfig::getStopTracingOnDestruct() const {
  131.         return stop_tracing;
               ^
  132.     }
  133. 

phosphor/src/trace_log.cc:98:9: <Write trace>
 96.     void TraceLog::start(const TraceConfig& _trace_config) {
 97.         std::lock_guard<TraceLog> lh(*this);
 98.         start(lh, _trace_config);
             ^
 99.     }
100. 

phosphor/src/trace_log.cc:98:9: call to phosphor::TraceLog::start
 96.     void TraceLog::start(const TraceConfig& _trace_config) {
 97.         std::lock_guard<TraceLog> lh(*this);
 98.         start(lh, _trace_config);
             ^
 99.     }
100. 

phosphor/src/trace_log.cc:103:9: call to phosphor::TraceConfig::operator=
  101.     void TraceLog::start(std::lock_guard<TraceLog>& lh,
  102.                          const TraceConfig& _trace_config) {
  103.         trace_config = _trace_config;
               ^
  104. 
  105.         size_t buffer_size = trace_config.getBufferSize() / sizeof(TraceChunk);

phosphor/include/phosphor/trace_config.h:169:24: access to `this->trace_config.stop_tracing`
    167.      * methods.
    168.      */
    169.     class PHOSPHOR_API TraceConfig {
                                ^
    170.     public:
    171.         TraceConfig();
