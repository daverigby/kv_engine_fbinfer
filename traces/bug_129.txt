#129
kv_engine/engines/ep/src/kvstore/magma-kvstore/magma-kvstore.cc:2726: warning: Lock Consistency Violation
  Read/Write race. Non-private method `MagmaKVStore::getCollectionsManifestUidDoc` indirectly reads without synchronization from `magma::ExecutionEnvRegistry::defaultEnv.first`. Potentially races with write in method `MagmaKVStore::MagmaKVStore`.

kv_engine/engines/ep/src/kvstore/magma-kvstore/magma-kvstore.cc:2726:12: <Read trace>
2724.         return {status, std::string{}};
2725.     }
2726.     return {status, std::move(manifest)};
                 ^
2727. }
2728. 

kv_engine/engines/ep/src/kvstore/magma-kvstore/magma-kvstore.cc:2726:12: call to std::pair<magma::Status,std::basic_string<char,std::char_traits<char>,std::allocator<char>>>::pair<magma::Status_&,_std::string,_false>
2724.         return {status, std::string{}};
2725.     }
2726.     return {status, std::move(manifest)};
                 ^
2727. }
2728. 

/Users/dave/repos/facebook/infer/facebook-clang-plugins/clang/install/include/c++/v1/utility:447:11: call to magma::Status::Status
  445.         _NOEXCEPT_((is_nothrow_constructible<first_type, _U1>::value &&
  446.                     is_nothrow_constructible<second_type, _U2>::value))
  447.         : first(_VSTD::forward<_U1>(__u1)), second(_VSTD::forward<_U2>(__u2)) {}
                 ^
  448. 
  449.     template<class _U1, class _U2, _EnableB<

magma/util/status.cc:40:17: call to magma::ExecutionEnvRegistry::GetDefaultExecutionEnv
    38.     if (status.s != nullptr) {
    39.         ExecutionEnvGuard envGuard(
    40.                 ExecutionEnvRegistry::GetDefaultExecutionEnv());
                        ^
    41.         s = std::make_unique<state>(state{status.s->code, status.s->msg});
    42.     }

magma/util/execution_env.cc:48:12: call to std::pair<void*,int>::pair
      46. 
      47. Magma::ExecutionEnvironment ExecutionEnvRegistry::GetDefaultExecutionEnv() {
      48.     return defaultEnv;
                     ^
      49. }
      50. 

/Users/dave/repos/facebook/infer/facebook-clang-plugins/clang/install/include/c++/v1/utility:309:5: access to `magma::ExecutionEnvRegistry::defaultEnv.first`
        307. 
        308. #if !defined(_LIBCPP_CXX03_LANG)
        309.     pair(pair const&) = default;
                 ^
        310.     pair(pair&&) = default;
        311. #else

kv_engine/engines/ep/src/kvstore/magma-kvstore/magma-kvstore.cc:666:13: <Write trace>
664.     configuration.magmaCfg.UID = loggerName;
665. 
666.     magma = std::make_unique<MagmaMemoryTrackingProxy>(configuration.magmaCfg);
                 ^
667. 
668.     setMaxDataSize(configuration.getBucketQuota());

kv_engine/engines/ep/src/kvstore/magma-kvstore/magma-kvstore.cc:666:13: call to std::make_unique<ca2ec7ba8bc0afba>
664.     configuration.magmaCfg.UID = loggerName;
665. 
666.     magma = std::make_unique<MagmaMemoryTrackingProxy>(configuration.magmaCfg);
                 ^
667. 
668.     setMaxDataSize(configuration.getBucketQuota());

/Users/dave/repos/facebook/infer/facebook-clang-plugins/clang/install/include/c++/v1/memory:2094:32: call to MagmaMemoryTrackingProxy::MagmaMemoryTrackingProxy
  2092. make_unique(_Args&&... __args)
  2093. {
  2094.     return unique_ptr<_Tp>(new _Tp(_VSTD::forward<_Args>(__args)...));
                                       ^
  2095. }
  2096. 

kv_engine/engines/ep/src/kvstore/magma-kvstore/magma-memory-tracking-proxy.cc:103:13: call to std::make_unique<magma::Magma,_magma::Magma::Config_&>
    101.         magma::Magma::Config& config) {
    102.     cb::UseArenaMallocSecondaryDomain domainGuard;
    103.     magma = std::make_unique<magma::Magma>(config);
                     ^
    104. }
    105. 

/Users/dave/repos/facebook/infer/facebook-clang-plugins/clang/install/include/c++/v1/memory:2094:32: call to magma::Magma::Magma
      2092. make_unique(_Args&&... __args)
      2093. {
      2094.     return unique_ptr<_Tp>(new _Tp(_VSTD::forward<_Args>(__args)...));
                                           ^
      2095. }
      2096. 

magma/magma/db.cc:119:16: call to magma::Magma::Impl::Impl
        117. 
        118. Magma::Magma(Config& config) {
        119.     impl = new Impl(config);
                            ^
        120. }
        121. 

magma/magma/db.cc:48:5: call to magma::ExecutionEnvRegistry::Init
          46. 
          47. Magma::Impl::Impl(Config& config) : cfg(config), kvstores(cfg) {
          48.     ExecutionEnvRegistry::Init(cfg.SwitchExecutionEnvFunc, cfg.DefaultEnv);
                  ^
          49.     // Disable CheckpointOnShutdown in readonly mode
          50.     if (cfg.ReadOnly) {

magma/util/execution_env.cc:34:9: call to std::pair<void*,int>::operator=
            32.     if (!initialized) {
            33.         ExecutionEnvRegistry::switchExecutionEnvFunc = switchEnvFunction;
            34.         ExecutionEnvRegistry::defaultEnv = defaultEnvironment;
                        ^
            35.         initialized = true;
            36.     }

/Users/dave/repos/facebook/infer/facebook-clang-plugins/clang/install/include/c++/v1/utility:519:9: access to `magma::ExecutionEnvRegistry::defaultEnv.first`
              517.                    is_nothrow_copy_assignable<second_type>::value)
              518.     {
              519.         first = __p.first;
                           ^
              520.         second = __p.second;
              521.         return *this;
